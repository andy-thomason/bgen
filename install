#!/bin/bash

URL=https://raw.githubusercontent.com/limix/bgen/master/VERSION
VERSION=$(curl -s $URL)

echo "[0/5] Library(bgen==$VERSION)"

rm /tmp/bgen.XXXX.log >/dev/null 2>&1 || true

logfile=$(mktemp /tmp/bgen.XXXX.log)
exec 3>"$logfile"

function silent_run
{
    eval "$@ >/dev/null 2>&1"
}

function silent_trun
{
    eval "$@ >/dev/null 2>&1 || true"
}

function do_then_sudo
{
    eval "$@"
    if [ $? != 0 ]; then
        eval "sudo $@"
    fi
}

FILE=bgen-$VERSION.tar.gz
DIR=bgen-$VERSION
URL=https://github.com/limix/bgen/archive/$VERSION.tar.gz

silent_trun rm $FILE
silent_trun rm -rf $DIR

echo -n "[1/5] Downloading... "
silent_run curl -o $FILE -L $URL
[ $? == 0 ] && echo "done." || { echo "FAILED."; exit 1; }

tar xzf $FILE && cd $DIR
mkdir build && cd build

echo -n "[2/5] Configuring... "
silent_run cmake ..
[ $? == 0 ] && echo "done." || { echo "FAILED."; exit 1; }

echo -n "[3/5] Compiling... "
silent_run make
[ $? == 0 ] && echo "done." || { echo "FAILED."; exit 1; }

echo -n "[4/5] Testing... "
silent_run make test
[ $? == 0 ] && echo "done." || { echo "FAILED."; exit 1; }

echo -n "[5/5] Installing... "
silent_run do_then_sudo make install
[ $? == 0 ] && echo "done." || { echo "FAILED."; exit 1; }

cd .. && cd ..
silent_trun rm $FILE
silent_trun rm -rf $DIR

if type "ldconfig" >/dev/null 2>&1; then
    silent_run do_then_sudo ldconfig
fi
